version: '3.0'

services:
    gateway:
        container_name: gateway-dev
        env_file:
            - ./apps/gateway/.dev.env
        build:
            context: .
            dockerfile: ./apps/gateway/Dockerfile
            target: development
        develop:
            watch:
                - action: sync
                  path: ./apps/gateway
                  target: /app/apps/gateway
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: package.json
        ports:
            - 3000:3000
        depends_on:
            - postgres
            - products
            - carts
            - users
        restart: always
    products:
        hostname: products
        container_name: products-dev
        env_file:
            - ./apps/products/.dev.env
        build:
            context: .
            dockerfile: ./apps/products/Dockerfile
            target: development
        develop:
            watch:
                - action: sync
                  path: ./apps/products
                  target: /app/apps/products
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: package.json
        ports:
            - 3001
        depends_on:
            - postgres
        restart: always
    carts:
        hostname: carts
        container_name: carts-dev
        env_file:
            - ./apps/carts/.dev.env
        build:
            context: .
            dockerfile: ./apps/carts/Dockerfile
            target: development
        develop:
            watch:
                - action: sync
                  path: ./apps/carts
                  target: /app/apps/carts
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: package.json
        ports:
            - 3002
        depends_on:
            - postgres
        restart: always
    users:
        hostname: users
        container_name: users-dev
        env_file:
            - ./apps/users/.dev.env
        build:
            context: .
            dockerfile: ./apps/users/Dockerfile
            target: development
        develop:
            watch:
                - action: sync
                  path: ./apps/users
                  target: /app/apps/users
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: package.json
        ports:
            - 3003
        depends_on:
            - postgres
        restart: always
    orders:
        hostname: orders
        container_name: orders-dev
        env_file:
            - ./apps/orders/.dev.env
        build:
            context: .
            dockerfile: ./apps/orders/Dockerfile
            target: development
        develop:
            watch:
                - action: sync
                  path: ./apps/orders
                  target: /app/apps/orders
                  ignore:
                      - node_modules/
                - action: rebuild
                  path: package.json
        ports:
            - 3004:3004
        depends_on:
            - postgres
        restart: always
    postgres:
        hostname: postgres
        container_name: postgres-dev
        image: postgres:14
        environment:
            - PG_DATA=/var/lib/postgresql/data
            - POSTGRES_HOST=postgres
            - POSTGRES_USER=admin
            - POSTGRES_DB=test
            - POSTGRES_PASSWORD=12345
        ports:
            - 5432
        volumes:
            - pgdata:/var/lib/postgresql/data
        restart: always
    redis:
    container_name: redis
    hostname: redis
    image: redis
    ports:
        - 6379
    volumes:
        - redis:/data

volumes:
    pgdata:
    redis:
